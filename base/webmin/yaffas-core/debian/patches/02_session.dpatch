#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_session.dpatch by Christof Musik <musik@bitbone.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' yaffas-core~/usr/local/webmin/admin.cgi yaffas-core/usr/local/webmin/admin.cgi
--- yaffas-core~/usr/local/webmin/admin.cgi	1970-01-01 00:00:00.000000000 +0000
+++ yaffas-core/usr/local/webmin/admin.cgi	2012-09-28 07:34:49.272013763 +0000
@@ -0,0 +1,79 @@
+#!/usr/bin/perl -w
+# This file will called from bitbonethme/index.gi
+#use strict;
+use CGI;
+use Yaffas;
+use Yaffas::UI;
+
+my $cgi = new CGI;
+our %lang;
+&getlang(\%lang);
+
+if($cgi->param('force')){
+	my @files = qw(/opt/yaffas/var/logged.stor /opt/yaffas/var/sessiondb.pag);
+	unlink @files;
+
+	my ($pid, $new);
+	my $i = 0;
+
+	my %sessiondb;
+	dbmopen(%sessiondb, "/opt/yaffas/var/sessiondb", 0700);
+	$sessiondb{$miniserv::session_id} = "admin ".time()." ".$ENV{REMOTE_HOST};
+	dbmclose(%sessiondb);
+	
+	open(PID, "</opt/yaffas/var/miniserv.pid"); chop($pid = <PID>); close(PID);
+	kill 10, $pid;
+
+	print "Content-type: text/html\n\n";
+	print "<html><head><meta http-equiv=\"refresh\" content=\"0; URL=/\"></head></html>\n";
+} else {
+	my %sessiondb;
+	dbmopen(%sessiondb, "/opt/yaffas/var/sessiondb", 0700);
+	my %logged_user;
+	
+	foreach my $k (keys %sessiondb) {
+		my @v = split /\s+/, $sessiondb{$k};
+
+		if (scalar @v == 3) {
+			$logged_user{$v[1]} = $v[2];
+		}
+	}
+	my @keys = sort keys %logged_user;
+	my $time = shift @keys;
+	
+	$ENV{REMOTE_USER} = "";
+	$main::logged_in = "1";
+	$main::logged_in_ip = $logged_user{$time};
+	Yaffas::init_webmin();
+	require "./".$main::gconfig{theme}."/session_login.cgi";
+	return 1;
+}
+
+# get the language and write it via the reference into the hash
+sub getlang {
+	my $hash = shift;
+	my $config = '/opt/yaffas/etc/webmin/config';
+	my $lang;
+
+	local $_;
+
+	$lang = "en";
+
+	open(CONFIG, "< $config");
+	while(<CONFIG>){
+		$lang = $1 if m/^lang=(.*?)$/;
+	}
+	close(CONFIG);
+
+	open(LANG, "< /opt/yaffas/webmin/lang/$lang");
+	while(<LANG>){
+		chomp;
+		s/^\s+//;
+		s/\s+$//;
+		next unless length;
+		my ($key, $value) = split(/=/, $_, 2);
+		$hash->{$key} = $value;
+	}
+	close(LANG);
+	return 1;
+}
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' yaffas-core~/usr/local/webmin/miniserv.pl yaffas-core/usr/local/webmin/miniserv.pl
--- yaffas-core~/usr/local/webmin/miniserv.pl	2012-09-28 07:34:49.141014070 +0000
+++ yaffas-core/usr/local/webmin/miniserv.pl	2012-09-28 07:34:49.274013759 +0000
@@ -1940,6 +1940,36 @@
 	$ENV{'HTTP_COOKIE'} =~ s/;?\s*$sidname=([a-f0-9]+)//;
 	$ENV{'MOBILE_DEVICE'} = 1 if ($mobile_device);
 
+
+	### session handler. log users in/out, so that only one admin
+	### can see the frontend
+
+	dbmopen(%sessiondb, $config{'sessiondb'}, 0700);
+
+	if($config{'session'} && $config{'one_admin'} && int keys %sessiondb > 1) {
+		if($ENV{'SCRIPT_FILENAME'} !~ m#^/opt/yaffas/webmin/$config{'one_admin_page'}$# && $ENV{'SCRIPT_FILENAME'} !~ m#^/opt/yaffas/webmin/[\w\d-]+theme/session_login\.cgi$#) {
+			local @latest = sort {
+				my $c = (split(/\s+/, $sessiondb{$a}))[1];
+				my $d = (split(/\s+/, $sessiondb{$b}))[1];
+				$d <=> $c } keys %sessiondb;
+				local $latest_admin = pop @latest;
+
+
+				if($latest_admin ne $session_id){
+					&write_data("HTTP/1.0 302 Moved Temporarily\r\n");
+					&write_data("Date: $datestr\r\n");
+					&write_data("Server: $config{'server'}\r\n");
+					&write_data("Location: /$config{'one_admin_page'}\r\n");
+					&write_keep_alive(0);
+					&write_data("\r\n");
+					dbmclose(%sessiondb);
+					return 0;
+				}
+		}
+	}
+	dbmclose(%sessiondb);
+	
+
 	# Check if the CGI can be handled internally
 	open(CGI, $full);
 	local $first = <CGI>;
